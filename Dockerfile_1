 ARG RELEASE
 ARG LAUNCHPAD_BUILD_ARCH
 LABEL org.opencontainers.image.ref.name=ubuntu
 LABEL org.opencontainers.image.version=22.04
 ADD file:53ce73ebbd6d87a234a33414686f12909aaaf28b7238593f746a327c7d004ce7 in / 
 CMD ["/bin/bash"]
 ENV DEBIAN_FRONTEND=noninteractive LANGUAGE=en_US:en LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8
 /bin/sh -c set -ex     && apt-get update     && apt-get install -y --no-install-recommends         locales         locales-all         tzdata     && locale-gen en_US $LANG     && update-locale LC_ALL=$LC_ALL LANG=$LANG     && locale         && apt-get install -y --no-install-recommends         build-essential         software-properties-common         apt-transport-https         ca-certificates         lsb-release         pkg-config         gnupg         git         git-lfs         gdb         wget         wget2         curl         nano         zip         unzip         time         sshpass         ssh-client     && apt-get clean     && rm -rf /var/lib/apt/lists/*         && gcc --version     && g++ --version
 COPY file:c151096ecdec41c0e751df4f9131773ddaf0b0074b72388cc344129a04329635 in /usr/local/bin/ 
 ARG PIP_INDEX_REPO PIP_UPLOAD_REPO PIP_UPLOAD_USER PIP_UPLOAD_PASS PIP_TRUSTED_HOSTS TAR_INDEX_URL SCP_UPLOAD_URL SCP_UPLOAD_USER SCP_UPLOAD_PASS
 ENV TAR_INDEX_URL=https://apt.jetson-ai-lab.dev:8000/jp6/cu126 PIP_INDEX_URL=https://pypi.jetson-ai-lab.dev/jp6/cu126 PIP_TRUSTED_HOST= TWINE_REPOSITORY_URL=http://localhost/jp6/cu126 TWINE_USERNAME=jp6 TWINE_PASSWORD=none SCP_UPLOAD_URL=localhost:/dist/jp6/cu126 SCP_UPLOAD_USER=None SCP_UPLOAD_PASS=None
 ARG CUDA_URL CUDA_DEB CUDA_PACKAGES CUDA_ARCH_LIST DISTRO=ubuntu2004
 COPY file:4688f070ce9fd499963f7be4fc8a47addb43e87261c4168cebeebf5923452502 in /tmp/install_cuda.sh 
 |5 CUDA_ARCH_LIST=87 CUDA_DEB=cuda-tegra-repo-ubuntu2204-12-6-local CUDA_PACKAGES=cuda-toolkit* CUDA_URL=https://developer.download.nvidia.com/compute/cuda/12.6.3/local_installers/cuda-tegra-repo-ubuntu2204-12-6-local_12.6.3-1_arm64.deb DISTRO=ubuntu2204 /bin/sh -c /tmp/install_cuda.sh
 ENV CUDA_HOME=/usr/local/cuda
 ENV NVCC_PATH=/usr/local/cuda/bin/nvcc
 ENV NVIDIA_VISIBLE_DEVICES=all NVIDIA_DRIVER_CAPABILITIES=all CUDAARCHS=87 CUDA_ARCHITECTURES=87 CUDA_HOME=/usr/local/cuda CUDNN_LIB_PATH=/usr/lib/aarch64-linux-gnu CUDNN_LIB_INCLUDE_PATH=/usr/include CMAKE_CUDA_COMPILER=/usr/local/cuda/bin/nvcc CUDA_NVCC_EXECUTABLE=/usr/local/cuda/bin/nvcc CUDACXX=/usr/local/cuda/bin/nvcc TORCH_NVCC_FLAGS="-Xfatbin -compress-all" CUDA_BIN_PATH=/usr/local/cuda/bin CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda PATH=/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin LD_LIBRARY_PATH=/usr/local/cuda/compat:/usr/local/cuda/lib64: DEBIAN_FRONTEND=noninteractive
 WORKDIR /
 ARG CUDNN_URL
 ARG CUDNN_DEB
 ARG CUDNN_PACKAGES
 |3 CUDNN_DEB=cudnn-local-tegra-repo-ubuntu2204-9.4.0 CUDNN_PACKAGES=libcudnn*-dev libcudnn*-samples CUDNN_URL=https://developer.download.nvidia.com/compute/cudnn/9.4.0/local_installers/cudnn-local-tegra-repo-ubuntu2204-9.4.0_1.0-1_arm64.deb /bin/sh -c echo "Downloading ${CUDNN_DEB}" &&     mkdir /tmp/cudnn && cd /tmp/cudnn &&     wget --quiet --show-progress --progress=bar:force:noscroll ${CUDNN_URL} &&     dpkg -i *.deb &&     cp /var/cudnn-local-tegra-repo-*/cudnn-local-tegra-*-keyring.gpg /usr/share/keyrings/ &&     apt-get update &&     apt-cache search cudnn &&     apt-get install -y --no-install-recommends ${CUDNN_PACKAGES} &&     rm -rf /var/lib/apt/lists/* &&     apt-get clean &&     dpkg --list | grep cudnn &&     dpkg -P ${CUDNN_DEB} &&     rm -rf /tmp/cudnn
 |3 CUDNN_DEB=cudnn-local-tegra-repo-ubuntu2204-9.4.0 CUDNN_PACKAGES=libcudnn*-dev libcudnn*-samples CUDNN_URL=https://developer.download.nvidia.com/compute/cudnn/9.4.0/local_installers/cudnn-local-tegra-repo-ubuntu2204-9.4.0_1.0-1_arm64.deb /bin/sh -c cd /usr/src/cudnn_samples_v*/conv_sample/ &&     make -j$(nproc)
 ARG PYTHON_VERSION_ARG
 ENV PYTHON_VERSION=3.10 PIP_DISABLE_PIP_VERSION_CHECK=on PIP_DEFAULT_TIMEOUT=100 PYTHONFAULTHANDLER=1 PYTHONUNBUFFERED=1 PYTHONIOENCODING=utf-8 PYTHONHASHSEED=random PIP_NO_CACHE_DIR=off PIP_CACHE_PURGE=true PIP_ROOT_USER_ACTION=ignore TWINE_NON_INTERACTIVE=1 DEBIAN_FRONTEND=noninteractive
 COPY file:ac02da9fae7568248589f655f8bc4a63b79964519328759d7e4f59f0dcae8a57 in /tmp/install_python.sh
 |1 PYTHON_VERSION_ARG=3.10 /bin/sh -c /tmp/install_python.sh
 ENV OPENBLAS_CORETYPE=ARMV8
 /bin/sh -c pip3 install --upgrade --force-reinstall --no-cache-dir --verbose 'numpy<2' &&     pip3 show numpy && python3 -c 'import numpy; print(numpy.__version__)'
 /bin/sh -c set -ex     && pip3 install --upgrade --force-reinstall --no-cache-dir --verbose cmake         && cmake --version     && which cmake
 ARG ONNX_VERSION
 |1 ONNX_VERSION=main /bin/sh -c pip3 install --no-cache-dir --verbose onnx ||     pip3 install --no-cache-dir --verbose git+https://github.com/onnx/onnx@${ONNX_VERSION} &&     pip3 show onnx &&     python3 -c 'import onnx; print(onnx.__version__)'
 ARG TORCH_CUDA_ARCH_ARGS TORCH_VERSION PYTORCH_BUILD_VERSION USE_NCCL=0 USE_GLOO=1 USE_MPI=1 USE_NNPACK=1 USE_XNNPACK=1 USE_PYTORCH_QNNPACK=1 FORCE_BUILD=off
 ENV TORCH_CUDA_ARCH_LIST=8.7 TORCH_HOME=/data/models/torch
 COPY multi:aa70eebffdaaf4ec20d047400b507804fe783e758bece66104066854e670748e in /tmp/pytorch/ 
 |10 FORCE_BUILD=off PYTORCH_BUILD_VERSION=2.5.0 TORCH_CUDA_ARCH_ARGS=8.7 TORCH_VERSION=2.5 USE_GLOO=1 USE_MPI=0 USE_NCCL=1 USE_NNPACK=1 USE_PYTORCH_QNNPACK=1 USE_XNNPACK=1 /bin/sh -c /tmp/pytorch/install.sh || /tmp/pytorch/build.sh
 ARG TORCHVISION_VERSION FORCE_BUILD=off
 COPY multi:235afee15aebace931185b2cf536d7aa84b9b9113e39d10e191ee4d605226be1 in /tmp/torchvision/ 
 |2 FORCE_BUILD=off TORCHVISION_VERSION=0.20.0 /bin/sh -c apt-get update &&     apt-get install -y --no-install-recommends         libjpeg-dev         libpng-dev         zlib1g-dev 	&& rm -rf /var/lib/apt/lists/* 	&& apt-get clean
 |2 FORCE_BUILD=off TORCHVISION_VERSION=0.20.0 /bin/sh -c /tmp/torchvision/install.sh || /tmp/torchvision/build.sh
 ENV TRANSFORMERS_CACHE=/data/models/huggingface HUGGINGFACE_HUB_CACHE=/data/models/huggingface HF_HOME=/data/models/huggingface
 COPY file:31583bc005bc47928bcc5337891ac48bf6e3bc3d3bd525b755d487e841b21faf in /usr/local/bin/ 
 COPY file:b9e93da08167ff3d361a60be33029d9e580dcf9c5b7efa3223bc2908fbaac57d in /usr/local/bin/_huggingface-downloader.py 
 /bin/sh -c set -ex     && pip3 install --no-cache-dir --verbose         huggingface_hub[cli]         dataclasses         && huggingface-cli --help     && huggingface-downloader --help     && pip3 show huggingface_hub     && python3 -c 'import huggingface_hub; print(huggingface_hub.__version__)'         && apt-get update     && rm -rf /var/lib/apt/lists/*     && apt-get clean
 /bin/sh -c curl https://sh.rustup.rs -sSf | sh -s -- -y
 ENV PATH=/root/.cargo/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 /bin/sh -c rustc --version &&     pip3 install --no-cache-dir --verbose setuptools-rust
 ARG TRANSFORMERS_PACKAGE=transformers TRANSFORMERS_VERSION
 |2 TRANSFORMERS_PACKAGE=transformers==4.48.0 TRANSFORMERS_VERSION=4.48.0 /bin/sh -c pip3 install --no-cache-dir --verbose accelerate &&     pip3 install --no-cache-dir --verbose sentencepiece &&     pip3 install --no-cache-dir --verbose optimum &&         pip3 uninstall -y transformers &&         echo "Installing tranformers $TRANSFORMERS_VERSION (from $TRANSFORMERS_PACKAGE)" &&     pip3 install --no-cache-dir --verbose ${TRANSFORMERS_PACKAGE} &&         PYTHON_ROOT=`pip3 show transformers | grep Location: | cut -d' ' -f2` &&     sed -i         -e 's|torch.distributed.is_initialized|torch.distributed.is_available|g'         ${PYTHON_ROOT}/transformers/modeling_utils.py
 COPY file:d65b25d7fbe6ea1b91a3bb25e0cba28a6390cf9f83e569b2fc0c8dee08623169 in /usr/local/bin 
|2 TRANSFORMERS_PACKAGE=transformers==4.48.0 TRANSFORMERS_VERSION=4.48.0 /bin/sh -c pip3 show transformers     && python3 -c 'import transformers; print(transformers.__version__)'
 ARG TORCHAUDIO_VERSION FORCE_BUILD=off
COPY multi:417bd0cd0293c665e6bf83e2793737cdcf58720f1c4b0b3e0b826125509b2aa5 in /tmp/torchaudio/ 
|2 FORCE_BUILD=off TORCHAUDIO_VERSION=2.5.0 /bin/sh -c /tmp/torchaudio/install.sh || /tmp/torchaudio/build.sh
 ARG TRITON_VERSION TRITON_BRANCH FORCE_BUILD=off
COPY multi:044d3c007e27257cb20020e8a8f595529ffd56f2fb3587dc76a2249cd6619e05 in /tmp/triton/ 
|3 FORCE_BUILD=off TRITON_BRANCH=release/3.1.x TRITON_VERSION=3.1.0 /bin/sh -c /tmp/triton/install.sh || /tmp/triton/build.sh
 ARG VLLM_VERSION XGRAMMAR_VERSION FORCE_BUILD=off
|3 FORCE_BUILD=on VLLM_VERSION=0.6.6.post1 XGRAMMAR_VERSION=0.1.9 /bin/sh -c apt-get update -y && apt-get install -y libnuma-dev     libsndfile1 libsndfile1-dev libprotobuf-dev libsm6 libxext6 libgl1
COPY multi:12944d526fc3a310c9c51de0d0d3e5a04f48e1ad58c3ab257d62e26ff7b5a6c3 in /tmp/vllm/ 
|3 FORCE_BUILD=on VLLM_VERSION=0.6.6.post1 XGRAMMAR_VERSION=0.1.9 /bin/sh -c /tmp/vllm/install.sh || /tmp/vllm/build.sh

